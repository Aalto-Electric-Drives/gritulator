
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/gfl/plot_grid_following_control_vdc_mode_grid_converter_10kVA.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_gfl_plot_grid_following_control_vdc_mode_grid_converter_10kVA.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_gfl_plot_grid_following_control_vdc_mode_grid_converter_10kVA.py:


Example simulation script: 10-kVA grid converter connected to a symmetrical
three-phase AC voltage source (grid) through an inductive filter.
    
The control system includes
    - DC-bus voltage controller;
    - Phase-Locked Loop (PLL) to synchronize with the grid;
    - Current reference generation;
    - Proportional-integral (PI) vector current controller

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Import the packages.

.. GENERATED FROM PYTHON SOURCE LINES 14-23

.. code-block:: default


    import numpy as np
    from motulator import model, control
    from motulator import BaseValuesElectrical, plot_grid

    # To check the computation time of the program
    import time
    start_time = time.time()








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: default

    base_values = BaseValuesElectrical(
        U_nom=400, I_nom=14.5, f_nom=50.0, P_nom=10e3)









.. GENERATED FROM PYTHON SOURCE LINES 30-31

Configure the system model (grid model)

.. GENERATED FROM PYTHON SOURCE LINES 31-63

.. code-block:: default

    grid_filter = model.LFilter(L_f=10e-3, L_g=0, R_g=0)
    grid_model = model.StiffSource(w_N=2*np.pi*50)
    dc_model = model.dc_bus.DCBus(C_dc = 1e-3, u_dc0=600, G_dc=0)
    converter = model.Inverter(u_dc=650)
    """
    REMARK:
        if you do not want to simulate any DC bus dynamics, you should define
        dc_model = None. This would make the DC voltage constant, using the
        value given in the converter model.
        Do not forget also to activate/deactivate the dc-bus control.
    """
    
    if dc_model == None:
        mdl = model.ac_grid.StiffSourceAndLFilterModel(
            grid_filter, grid_model, converter)
    else:
        mdl = model.dc_bus.DCBusAndLFilterModel(
            grid_filter, grid_model, dc_model, converter)

    pars = control.gfl.GridFollowingCtrlPars(
                L_f=10e-3,
                R_f=0,
                C_dc = 1e-3,
                f_sw = 8e3,
                T_s = 1/(16e3),
                on_v_dc=True,
                I_max = 1.5*base_values.i,
                p_max = base_values.p,
                )
    ctrl = control.gfl.GridFollowingCtrl(pars)









.. GENERATED FROM PYTHON SOURCE LINES 64-88

.. code-block:: default


    # Set the reactive power reference
    ctrl.q_g_ref = lambda t: (t > .04)*(4e3)

    # DC-side current (seen as a disturbance from the converter perspective)
    if dc_model != None:
        mdl.dc_model.i_ext = lambda t: (t > .06)*(10)

    # AC-voltage magnitude (to simulate voltage dips or short-circuits)
    e_g_abs_var =  lambda t: np.sqrt(2/3)*400
    mdl.grid_model.e_g_abs = e_g_abs_var # grid voltage magnitude

    # DC voltage reference
    ctrl.u_dc_ref = lambda t: 600 + (t > .02)*(50)

    # Create the simulation object and simulate it
    sim = model.Simulation(mdl, ctrl, pwm=False)
    sim.simulate(t_stop = .1)

    # Print the execution time
    print('\nExecution time: {:.2f} s'.format((time.time() - start_time)))

    # Plot results in SI or per unit values
    plot_grid(sim, base=None)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/gfl/images/sphx_glr_plot_grid_following_control_vdc_mode_grid_converter_10kVA_001.png
         :alt: plot grid following control vdc mode grid converter 10kVA
         :srcset: /auto_examples/gfl/images/sphx_glr_plot_grid_following_control_vdc_mode_grid_converter_10kVA_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/gfl/images/sphx_glr_plot_grid_following_control_vdc_mode_grid_converter_10kVA_002.png
         :alt: plot grid following control vdc mode grid converter 10kVA
         :srcset: /auto_examples/gfl/images/sphx_glr_plot_grid_following_control_vdc_mode_grid_converter_10kVA_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Execution time: 1.90 s





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.113 seconds)


.. _sphx_glr_download_auto_examples_gfl_plot_grid_following_control_vdc_mode_grid_converter_10kVA.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_grid_following_control_vdc_mode_grid_converter_10kVA.py <plot_grid_following_control_vdc_mode_grid_converter_10kVA.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_grid_following_control_vdc_mode_grid_converter_10kVA.ipynb <plot_grid_following_control_vdc_mode_grid_converter_10kVA.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
