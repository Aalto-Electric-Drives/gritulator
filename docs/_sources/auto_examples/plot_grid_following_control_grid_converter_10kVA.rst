
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_grid_following_control_grid_converter_10kVA.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_grid_following_control_grid_converter_10kVA.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_grid_following_control_grid_converter_10kVA.py:


10-kVA grid following converter, power control
==============================================
    
This example simulates a grid following controlled converter connected to a
strong grid. The control system includes a phase-locked loop (PLL) to
synchronize with the grid, a current reference generatior and a PI-based
current controller.

.. GENERATED FROM PYTHON SOURCE LINES 13-14

Imports.

.. GENERATED FROM PYTHON SOURCE LINES 14-24

.. code-block:: Python


    import numpy as np
    from gritulator import model, control
    from gritulator import BaseValuesElectrical, plot_grid

    # To check the computation time of the program
    import time
    start_time = time.time()









.. GENERATED FROM PYTHON SOURCE LINES 25-26

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 26-31

.. code-block:: Python


    base_values = BaseValuesElectrical(
        U_nom=400, I_nom=14.5, f_nom=50.0, P_nom=10e3)









.. GENERATED FROM PYTHON SOURCE LINES 32-33

Create the system model.

.. GENERATED FROM PYTHON SOURCE LINES 33-43

.. code-block:: Python


    # grid impedance and filter model
    grid_filter = model.LFilter(L_f=10e-3, L_g=0, R_g=0)
    # AC grid model (either constant frequency or dynamic electromechanical model)
    grid_model = model.StiffSource(w_N=2*np.pi*50)
    converter = model.Inverter(u_dc=650)
    mdl = model.ac_grid.StiffSourceAndLFilterModel(
        grid_filter, grid_model, converter)









.. GENERATED FROM PYTHON SOURCE LINES 44-45

Configure the control system.

.. GENERATED FROM PYTHON SOURCE LINES 45-56

.. code-block:: Python


    # Control parameters
    pars = control.grid_following.GridFollowingCtrlPars(
                L_f=10e-3,
                f_sw = 5e3,
                T_s = 1/(10e3),
                i_max = 1.5*base_values.i,
                )
    ctrl = control.grid_following.GridFollowingCtrl(pars)









.. GENERATED FROM PYTHON SOURCE LINES 57-58

Set the time-dependent reference and disturbance signals.

.. GENERATED FROM PYTHON SOURCE LINES 58-68

.. code-block:: Python


    # Set the active and reactive power references
    ctrl.p_g_ref = lambda t: (t > .02)*(5e3)
    ctrl.q_g_ref = lambda t: (t > .04)*(4e3)

    # AC-voltage magnitude (to simulate voltage dips or short-circuits)
    e_g_abs_var =  lambda t: np.sqrt(2/3)*400
    mdl.grid_model.e_g_abs = e_g_abs_var # grid voltage magnitude









.. GENERATED FROM PYTHON SOURCE LINES 69-70

Create the simulation object and simulate it.

.. GENERATED FROM PYTHON SOURCE LINES 70-78

.. code-block:: Python


    sim = model.Simulation(mdl, ctrl, pwm=False)
    sim.simulate(t_stop = .1)

    # Print the execution time
    print('\nExecution time: {:.2f} s'.format((time.time() - start_time)))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Execution time: 0.50 s




.. GENERATED FROM PYTHON SOURCE LINES 79-80

Plot results in SI or per unit values.

.. GENERATED FROM PYTHON SOURCE LINES 80-82

.. code-block:: Python


    plot_grid(sim, base=base_values,plot_pcc_voltage=True)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_grid_following_control_grid_converter_10kVA_001.png
         :alt: plot grid following control grid converter 10kVA
         :srcset: /auto_examples/images/sphx_glr_plot_grid_following_control_grid_converter_10kVA_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_grid_following_control_grid_converter_10kVA_002.png
         :alt: plot grid following control grid converter 10kVA
         :srcset: /auto_examples/images/sphx_glr_plot_grid_following_control_grid_converter_10kVA_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.235 seconds)


.. _sphx_glr_download_auto_examples_plot_grid_following_control_grid_converter_10kVA.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_grid_following_control_grid_converter_10kVA.ipynb <plot_grid_following_control_grid_converter_10kVA.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_grid_following_control_grid_converter_10kVA.py <plot_grid_following_control_grid_converter_10kVA.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
