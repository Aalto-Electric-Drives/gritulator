
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.py:


12.5-kVA grid forming converter (RFPSC), with electromechanical grid model.
==============================================
    
This example simulates a grid forming controlled converter, which uses reference
feedforward power synchronization control (RFPSC) method connected to a weak
grid. The control system includes a power synchronization loop (PSL) to
synchronize with the grid, an inner P_type current controller used to damp the
current oscillations enhanced with a reference-feedforward term. The converter
is connected to an AC grid with electromechanical dynamics through an LCL
filter and an inductive impedance.

.. GENERATED FROM PYTHON SOURCE LINES 17-18

Imports.

.. GENERATED FROM PYTHON SOURCE LINES 18-27

.. code-block:: default


    import numpy as np
    from gritulator import model, control
    from gritulator import BaseValuesElectrical, plot_grid

    # To check the computation time of the program
    import time
    start_time = time.time()








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Compute base values based on the nominal values (just for figures).

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default

    base_values = BaseValuesElectrical(
        U_nom=400, I_nom=18, f_nom=50.0, P_nom=12.5e3)









.. GENERATED FROM PYTHON SOURCE LINES 34-35

Configure the system model (grid model).

.. GENERATED FROM PYTHON SOURCE LINES 35-55

.. code-block:: default


    grid_filter = model.LCLFilter(L_fc=3e-3, C_f=10e-6, L_fg=3e-3, L_g=20e-3)
    grid_model = model.FlexSource(w_N=2*np.pi*50, S_grid=500e3, H_g=2, r_d = 0.05)
    converter = model.Inverter(u_dc=650)
    
    mdl = model.ac_grid.ACFlexSourceAndLCLFilterModel(
        grid_filter, grid_model, converter)

    pars = control.grid_forming.PSCCtrlPars(
            L_f=3e-3,
            R_f=0,
            f_sw = 5e3,
            T_s = 1/(10e3),
            on_rf=True,
            on_v_dc=False,
            i_max = 1.5*base_values.i,
            w_0_cc = 2*np.pi*5,
            R_a = .2*base_values.Z)
    ctrl = control.grid_forming.PSCCtrl(pars)








.. GENERATED FROM PYTHON SOURCE LINES 56-57

Set the time-dependent reference and disturbance signals.

.. GENERATED FROM PYTHON SOURCE LINES 57-76

.. code-block:: default


    # Set the active power reference
    ctrl.p_g_ref = lambda t: ((t > .2)*(6.25e3))

    # AC-voltage magnitude (to simulate voltage dips or short-circuits)
    e_g_abs_var =  lambda t: np.sqrt(2/3)*400
    mdl.grid_model.e_g_abs = e_g_abs_var # grid voltage magnitude

    # AC grid electromechanical model
    mdl.grid_model.p_e = lambda t: (t > .4)*50e3 # load disturbance in the AC grid
    mdl.grid_model.p_m_ref = lambda t: 0 # mechanical power reference

    # Create the simulation object and simulate it
    sim = model.Simulation(mdl, ctrl, pwm=False)
    sim.simulate(t_stop = 6)

    # Print the execution time
    print('\nExecution time: {:.2f} s'.format((time.time() - start_time)))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Execution time: 35.21 s




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Plot results in SI or per unit values.

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: default


    plot_grid(sim, base=base_values, plot_pcc_voltage=True, plot_w=True)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model_001.png
         :alt: plot RFPSC grid converter 12.5kVA AC grid model
         :srcset: /auto_examples/images/sphx_glr_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/images/sphx_glr_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model_002.png
         :alt: plot RFPSC grid converter 12.5kVA AC grid model
         :srcset: /auto_examples/images/sphx_glr_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model_002.png
         :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 36.329 seconds)


.. _sphx_glr_download_auto_examples_plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.py <plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.ipynb <plot_RFPSC_grid_converter_12.5kVA_AC_grid_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
